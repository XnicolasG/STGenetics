// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(InventaryContext))]
    [Migration("20230716044133_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.AnimalEntity", b =>
                {
                    b.Property<string>("AnimalId")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("AnimalName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("AnimalPrice")
                        .HasColumnType("int");

                    b.Property<string>("BreedId")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("GenderId")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StatusId")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TotalQuantity")
                        .HasColumnType("int");

                    b.HasKey("AnimalId");

                    b.HasIndex("BreedId");

                    b.HasIndex("GenderId");

                    b.HasIndex("StatusId");

                    b.ToTable("AnimalsT");
                });

            modelBuilder.Entity("Entities.BreedEntity", b =>
                {
                    b.Property<string>("BreedId")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("BreedName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("BreedId");

                    b.ToTable("BreedT");
                });

            modelBuilder.Entity("Entities.GenderEntity", b =>
                {
                    b.Property<string>("GenderId")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("GenderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("GenderId");

                    b.ToTable("GenderT");
                });

            modelBuilder.Entity("Entities.StatusEntity", b =>
                {
                    b.Property<string>("StatusId")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("StatusId");

                    b.ToTable("StatusT");
                });

            modelBuilder.Entity("Entities.StorageEntity", b =>
                {
                    b.Property<string>("StorageId")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("AnimalId")
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PartialQuantity")
                        .HasColumnType("int");

                    b.Property<string>("WarehouseId")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("StorageId");

                    b.HasIndex("AnimalId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("StorageT");
                });

            modelBuilder.Entity("Entities.TradeEntity", b =>
                {
                    b.Property<string>("TradeId")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsInput")
                        .HasColumnType("bit");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("StorageId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoragesStorageId")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("TradeDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TradeId");

                    b.HasIndex("StoragesStorageId");

                    b.ToTable("TradeT");
                });

            modelBuilder.Entity("Entities.WarehouseEntity", b =>
                {
                    b.Property<string>("WarehouseId")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Warehouse")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("WarehouseId");

                    b.ToTable("WarehouseT");
                });

            modelBuilder.Entity("Entities.AnimalEntity", b =>
                {
                    b.HasOne("Entities.BreedEntity", "Breed")
                        .WithMany("Animals")
                        .HasForeignKey("BreedId");

                    b.HasOne("Entities.GenderEntity", "Gender")
                        .WithMany("Animals")
                        .HasForeignKey("GenderId");

                    b.HasOne("Entities.StatusEntity", "Status")
                        .WithMany("Animals")
                        .HasForeignKey("StatusId");
                });

            modelBuilder.Entity("Entities.StorageEntity", b =>
                {
                    b.HasOne("Entities.AnimalEntity", "Animal")
                        .WithMany("Storage")
                        .HasForeignKey("AnimalId");

                    b.HasOne("Entities.WarehouseEntity", "Warehouse")
                        .WithMany("Storage")
                        .HasForeignKey("WarehouseId");
                });

            modelBuilder.Entity("Entities.TradeEntity", b =>
                {
                    b.HasOne("Entities.StorageEntity", "Storages")
                        .WithMany("Trades")
                        .HasForeignKey("StoragesStorageId");
                });
#pragma warning restore 612, 618
        }
    }
}
