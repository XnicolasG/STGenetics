// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(InventaryContext))]
    [Migration("20230716052432_AddData")]
    partial class AddData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.AnimalEntity", b =>
                {
                    b.Property<string>("AnimalId")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("AnimalName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("AnimalPrice")
                        .HasColumnType("int");

                    b.Property<string>("BreedId")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("GenderId")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StatusId")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TotalQuantity")
                        .HasColumnType("int");

                    b.HasKey("AnimalId");

                    b.HasIndex("BreedId");

                    b.HasIndex("GenderId");

                    b.HasIndex("StatusId");

                    b.ToTable("AnimalsT");

                    b.HasData(
                        new
                        {
                            AnimalId = "BR5",
                            AnimalName = "ButterCup",
                            AnimalPrice = 4500,
                            DateOfBirth = new DateTime(2020, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalQuantity = 0
                        },
                        new
                        {
                            AnimalId = "TP13",
                            AnimalName = "Tommy",
                            AnimalPrice = 5200,
                            DateOfBirth = new DateTime(2019, 8, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalQuantity = 0
                        },
                        new
                        {
                            AnimalId = "LH6",
                            AnimalName = "Lola",
                            AnimalPrice = 2000,
                            DateOfBirth = new DateTime(2022, 4, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalQuantity = 0
                        },
                        new
                        {
                            AnimalId = "TL25",
                            AnimalName = "Thor",
                            AnimalPrice = 5100,
                            DateOfBirth = new DateTime(2021, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalQuantity = 0
                        },
                        new
                        {
                            AnimalId = "DP20",
                            AnimalName = "Delilah",
                            AnimalPrice = 2000,
                            DateOfBirth = new DateTime(2012, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalQuantity = 0
                        },
                        new
                        {
                            AnimalId = "DH12",
                            AnimalName = "Duke",
                            AnimalPrice = 3600,
                            DateOfBirth = new DateTime(2020, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalQuantity = 0
                        },
                        new
                        {
                            AnimalId = "GR25",
                            AnimalName = "Ginger",
                            AnimalPrice = 2600,
                            DateOfBirth = new DateTime(2022, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalQuantity = 0
                        },
                        new
                        {
                            AnimalId = "AW25",
                            AnimalName = "Atlas",
                            AnimalPrice = 2300,
                            DateOfBirth = new DateTime(2014, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalQuantity = 0
                        },
                        new
                        {
                            AnimalId = "AC23",
                            AnimalName = "Aurora",
                            AnimalPrice = 6600,
                            DateOfBirth = new DateTime(2019, 4, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalQuantity = 0
                        },
                        new
                        {
                            AnimalId = "MH28",
                            AnimalName = "Maverick",
                            AnimalPrice = 1400,
                            DateOfBirth = new DateTime(2011, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalQuantity = 0
                        },
                        new
                        {
                            AnimalId = "BS3",
                            AnimalName = "Brutus",
                            AnimalPrice = 6100,
                            DateOfBirth = new DateTime(2018, 11, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalQuantity = 0
                        },
                        new
                        {
                            AnimalId = "HR14",
                            AnimalName = "Hazel",
                            AnimalPrice = 1200,
                            DateOfBirth = new DateTime(2010, 6, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalQuantity = 0
                        },
                        new
                        {
                            AnimalId = "MR7",
                            AnimalName = "Molly",
                            AnimalPrice = 4700,
                            DateOfBirth = new DateTime(2020, 11, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalQuantity = 0
                        },
                        new
                        {
                            AnimalId = "TW8",
                            AnimalName = "Titan",
                            AnimalPrice = 6400,
                            DateOfBirth = new DateTime(2017, 5, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalQuantity = 0
                        },
                        new
                        {
                            AnimalId = "BP6",
                            AnimalName = "Bella",
                            AnimalPrice = 1400,
                            DateOfBirth = new DateTime(2011, 3, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalQuantity = 0
                        },
                        new
                        {
                            AnimalId = "MH12",
                            AnimalName = "Maisie",
                            AnimalPrice = 2000,
                            DateOfBirth = new DateTime(2023, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalQuantity = 0
                        },
                        new
                        {
                            AnimalId = "MS21",
                            AnimalName = "Maximus",
                            AnimalPrice = 2800,
                            DateOfBirth = new DateTime(2022, 12, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalQuantity = 0
                        },
                        new
                        {
                            AnimalId = "RS19",
                            AnimalName = "Rocky",
                            AnimalPrice = 3000,
                            DateOfBirth = new DateTime(2022, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalQuantity = 0
                        },
                        new
                        {
                            AnimalId = "CL3",
                            AnimalName = "Clover",
                            AnimalPrice = 3800,
                            DateOfBirth = new DateTime(2021, 7, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalQuantity = 0
                        },
                        new
                        {
                            AnimalId = "DR1",
                            AnimalName = "Daisy",
                            AnimalPrice = 1500,
                            DateOfBirth = new DateTime(2013, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalQuantity = 0
                        });
                });

            modelBuilder.Entity("Entities.BreedEntity", b =>
                {
                    b.Property<string>("BreedId")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("BreedName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("BreedId");

                    b.ToTable("BreedT");

                    b.HasData(
                        new
                        {
                            BreedId = "5d3aefe9-cdc1-4c48-8834-6a7003414ef1",
                            BreedName = "Red Angus"
                        },
                        new
                        {
                            BreedId = "5ed72cbc-1939-4b5c-957b-7e1135cabe9f",
                            BreedName = "Piedmontese"
                        },
                        new
                        {
                            BreedId = "c1441ce2-3c84-425c-86aa-9cc9b95fc921",
                            BreedName = "Limousin"
                        },
                        new
                        {
                            BreedId = "e030d28a-dea8-432d-b6be-62f1c7a623cb",
                            BreedName = "Watusi"
                        },
                        new
                        {
                            BreedId = "f2abeed2-df8e-45b5-b06e-9326ed16d211",
                            BreedName = "Charolais"
                        },
                        new
                        {
                            BreedId = "07d6ba26-26e4-4ae6-a664-965a1707e851",
                            BreedName = "Simmental"
                        },
                        new
                        {
                            BreedId = "7e2f0744-d1f4-4a76-87b5-29fcf955871f",
                            BreedName = "Hereford"
                        });
                });

            modelBuilder.Entity("Entities.GenderEntity", b =>
                {
                    b.Property<string>("GenderId")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("GenderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("GenderId");

                    b.ToTable("GenderT");

                    b.HasData(
                        new
                        {
                            GenderId = "640f9f68-79ca-4313-8ab8-f74f68a35fac",
                            GenderName = "Male"
                        },
                        new
                        {
                            GenderId = "021abfd5-05a2-474d-837c-cf365d83c3f6",
                            GenderName = "Female"
                        });
                });

            modelBuilder.Entity("Entities.StatusEntity", b =>
                {
                    b.Property<string>("StatusId")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("StatusId");

                    b.ToTable("StatusT");

                    b.HasData(
                        new
                        {
                            StatusId = "ad5e21e1-c205-44c7-811c-83681361611a",
                            StatusName = "Active"
                        },
                        new
                        {
                            StatusId = "fdfa02da-c241-4acd-b71c-4f79727c29a7",
                            StatusName = "Inactive"
                        });
                });

            modelBuilder.Entity("Entities.StorageEntity", b =>
                {
                    b.Property<string>("StorageId")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("AnimalId")
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PartialQuantity")
                        .HasColumnType("int");

                    b.Property<string>("WarehouseId")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("StorageId");

                    b.HasIndex("AnimalId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("StorageT");
                });

            modelBuilder.Entity("Entities.TradeEntity", b =>
                {
                    b.Property<string>("TradeId")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsInput")
                        .HasColumnType("bit");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("StorageId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoragesStorageId")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("TradeDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TradeId");

                    b.HasIndex("StoragesStorageId");

                    b.ToTable("TradeT");
                });

            modelBuilder.Entity("Entities.WarehouseEntity", b =>
                {
                    b.Property<string>("WarehouseId")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("WarehouseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("WarehouseId");

                    b.ToTable("WarehouseT");

                    b.HasData(
                        new
                        {
                            WarehouseId = "f7c70d02-eb85-40a7-b7c9-13c25896ac52",
                            WarehouseName = "Available"
                        },
                        new
                        {
                            WarehouseId = "b8903df6-7e9c-4f99-ae1f-c3f3b09fe4d8",
                            WarehouseName = "Sold"
                        });
                });

            modelBuilder.Entity("Entities.AnimalEntity", b =>
                {
                    b.HasOne("Entities.BreedEntity", "Breed")
                        .WithMany("Animals")
                        .HasForeignKey("BreedId");

                    b.HasOne("Entities.GenderEntity", "Gender")
                        .WithMany("Animals")
                        .HasForeignKey("GenderId");

                    b.HasOne("Entities.StatusEntity", "Status")
                        .WithMany("Animals")
                        .HasForeignKey("StatusId");
                });

            modelBuilder.Entity("Entities.StorageEntity", b =>
                {
                    b.HasOne("Entities.AnimalEntity", "Animal")
                        .WithMany("Storage")
                        .HasForeignKey("AnimalId");

                    b.HasOne("Entities.WarehouseEntity", "Warehouse")
                        .WithMany("Storage")
                        .HasForeignKey("WarehouseId");
                });

            modelBuilder.Entity("Entities.TradeEntity", b =>
                {
                    b.HasOne("Entities.StorageEntity", "Storages")
                        .WithMany("Trades")
                        .HasForeignKey("StoragesStorageId");
                });
#pragma warning restore 612, 618
        }
    }
}
